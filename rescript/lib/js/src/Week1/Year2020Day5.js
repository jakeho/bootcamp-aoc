// Generated by ReScript, PLEASE EDIT WITH CARE
'use strict';

var Js_math = require("rescript/lib/js/js_math.js");
var Belt_Array = require("rescript/lib/js/belt_Array.js");
var Belt_SortArrayInt = require("rescript/lib/js/belt_SortArrayInt.js");
var Year2020Day5Input = require("./Year2020Day5Input.js");

var boardingPasses = Year2020Day5Input.y2020d5.trim().split("\n");

function getRowDirections(str) {
  return Belt_Array.slice(str.split(""), 0, 7);
}

function getSeatDirections(str) {
  return Belt_Array.sliceToEnd(str.split(""), 7);
}

function searchWithin(directions) {
  var min = {
    contents: 0
  };
  var max = {
    contents: Math.pow(2.0, directions.length) - 1.0 | 0
  };
  Belt_Array.forEach(directions, (function (d) {
          if (d === "F" || d === "L") {
            max.contents = max.contents - Js_math.ceil_int((max.contents - min.contents | 0) / 2.0) | 0;
            return ;
          } else if (d === "B" || d === "R") {
            min.contents = min.contents + Js_math.ceil_int((max.contents - min.contents | 0) / 2.0) | 0;
            return ;
          } else {
            return ;
          }
        }));
  if (min.contents === max.contents) {
    return max.contents;
  } else {
    return 0;
  }
}

console.log(Belt_Array.get(Belt_SortArrayInt.stableSort(Belt_Array.map(boardingPasses, (function (pass) {
                    var row = searchWithin(getRowDirections(pass));
                    var col = searchWithin(getSeatDirections(pass));
                    return (row << 3) + col | 0;
                  }))), boardingPasses.length - 1 | 0));

exports.boardingPasses = boardingPasses;
exports.getRowDirections = getRowDirections;
exports.getSeatDirections = getSeatDirections;
exports.searchWithin = searchWithin;
/* boardingPasses Not a pure module */
